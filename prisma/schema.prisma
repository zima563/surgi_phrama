// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  subCategories SubCategory[]
  products      Product[]

  @@map("category")
}

model SubCategory {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  parentId  Int
  parent    Category  @relation(fields: [parentId], references: [id])
  products  Product[]

  @@map("subCategory")
}

model Product {
  id            Int          @id @default(autoincrement())
  title         String
  description   String
  image         String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  categoryId    Int
  subCategoryId Int?
  category      Category     @relation(fields: [categoryId], references: [id])
  subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])

  @@map("product")
}

model Message {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  phone     String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("message")
}

model User {
  id        Int      @id @default(autoincrement())
  userName  String   @db.VarChar(50)
  email     String   @unique @db.VarChar(100)
  password  String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}
